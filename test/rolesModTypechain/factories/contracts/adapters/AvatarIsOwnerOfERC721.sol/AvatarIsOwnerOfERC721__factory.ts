/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AvatarIsOwnerOfERC721,
  AvatarIsOwnerOfERC721Interface,
} from "../../../../contracts/adapters/AvatarIsOwnerOfERC721.sol/AvatarIsOwnerOfERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "location",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        internalType: "bytes12",
        name: "",
        type: "bytes12",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "reason",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5061030c8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806357cf558b1461002d575b5f80fd5b61004061003b3660046101a1565b61005b565b60408051921515835260208301919091520160405180910390f35b5f805f336001600160a01b0316635aef7de66040518163ffffffff1660e01b8152600401602060405180830381865afa15801561009a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100be919061024b565b90505f8887896100ce898361026d565b926100db93929190610292565b6100e4916102b9565b6040516331a9108f60e11b8152600481018290529091506001600160a01b0383811691908d1690636352211e90602401602060405180830381865afa15801561012f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610153919061024b565b6001600160a01b0316149b5f9b509950505050505050505050565b6001600160a01b0381168114610182575f80fd5b50565b80356001600160a01b03198116811461019c575f80fd5b919050565b5f805f805f805f60c0888a0312156101b7575f80fd5b87356101c28161016e565b965060208801359550604088013567ffffffffffffffff808211156101e5575f80fd5b818a0191508a601f8301126101f8575f80fd5b813581811115610206575f80fd5b8b6020828501011115610217575f80fd5b602083019750809650505050606088013592506080880135915061023d60a08901610185565b905092959891949750929550565b5f6020828403121561025b575f80fd5b81516102668161016e565b9392505050565b8082018082111561028c57634e487b7160e01b5f52601160045260245ffd5b92915050565b5f80858511156102a0575f80fd5b838611156102ac575f80fd5b5050820193919092039150565b8035602083101561028c575f19602084900360031b1b169291505056fea264697066735822122005fb2ade29a7784557174cc968712f33b34a58267196333a6c6d931819f6a03464736f6c63430008150033";

type AvatarIsOwnerOfERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AvatarIsOwnerOfERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AvatarIsOwnerOfERC721__factory extends ContractFactory {
  constructor(...args: AvatarIsOwnerOfERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AvatarIsOwnerOfERC721> {
    return super.deploy(overrides || {}) as Promise<AvatarIsOwnerOfERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AvatarIsOwnerOfERC721 {
    return super.attach(address) as AvatarIsOwnerOfERC721;
  }
  override connect(signer: Signer): AvatarIsOwnerOfERC721__factory {
    return super.connect(signer) as AvatarIsOwnerOfERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AvatarIsOwnerOfERC721Interface {
    return new utils.Interface(_abi) as AvatarIsOwnerOfERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AvatarIsOwnerOfERC721 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AvatarIsOwnerOfERC721;
  }
}
