/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestAvatar,
  TestAvatarInterface,
} from "../../../contracts/test/TestAvatar";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execTransactionFromModule",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execTransactionFromModuleReturnData",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506105f6806100206000396000f3fe6080604052600436106100385760003560e01c8063468721a7146100445780635229073f14610079578063c55cbe89146100a757600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f3660046103a0565b6100c9565b60405190151581526020015b60405180910390f35b34801561008557600080fd5b50610099610094366004610456565b6101a7565b604051610070929190610558565b3480156100b357600080fd5b506100c76100c23660046103a0565b610284565b005b60008160ff1660010361013b57856001600160a01b031684846040516100f0929190610594565b600060405180830381855af49150503d806000811461012b576040519150601f19603f3d011682016040523d82523d6000602084013e610130565b606091505b50508091505061019e565b856001600160a01b0316858585604051610156929190610594565b60006040518083038185875af1925050503d8060008114610193576040519150601f19603f3d011682016040523d82523d6000602084013e610198565b606091505b50909150505b95945050505050565b600060608260ff1660010361021957856001600160a01b0316846040516101ce91906105a4565b600060405180830381855af49150503d8060008114610209576040519150601f19603f3d011682016040523d82523d6000602084013e61020e565b606091505b50508092505061027b565b856001600160a01b0316858560405161023291906105a4565b60006040518083038185875af1925050503d806000811461026f576040519150601f19603f3d011682016040523d82523d6000602084013e610274565b606091505b5090925090505b94509492505050565b600060608260ff166001036102f857866001600160a01b031685856040516102ad929190610594565b600060405180830381855af49150503d80600081146102e8576040519150601f19603f3d011682016040523d82523d6000602084013e6102ed565b606091505b50508092505061035c565b866001600160a01b0316868686604051610313929190610594565b60006040518083038185875af1925050503d8060008114610350576040519150601f19603f3d011682016040523d82523d6000602084013e610355565b606091505b5090925090505b8161036957805160208201fd5b50505050505050565b6001600160a01b038116811461038757600080fd5b50565b803560ff8116811461039b57600080fd5b919050565b6000806000806000608086880312156103b857600080fd5b85356103c381610372565b945060208601359350604086013567ffffffffffffffff808211156103e757600080fd5b818801915088601f8301126103fb57600080fd5b81358181111561040a57600080fd5b89602082850101111561041c57600080fd5b6020830195508094505050506104346060870161038a565b90509295509295909350565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561046c57600080fd5b843561047781610372565b935060208501359250604085013567ffffffffffffffff8082111561049b57600080fd5b818701915087601f8301126104af57600080fd5b8135818111156104c1576104c1610440565b604051601f8201601f19908116603f011681019083821181831017156104e9576104e9610440565b816040528281528a602084870101111561050257600080fd5b8260208601602083013760006020848301015280965050505050506105296060860161038a565b905092959194509250565b60005b8381101561054f578181015183820152602001610537565b50506000910152565b8215158152604060208201526000825180604084015261057f816060850160208701610534565b601f01601f1916919091016060019392505050565b8183823760009101908152919050565b600082516105b6818460208701610534565b919091019291505056fea2646970667358221220ab78348bef97a402778a74d1e72f9b7b6d0acff19924586a1ef85da891b30bb164736f6c63430008110033";

type TestAvatarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestAvatarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestAvatar__factory extends ContractFactory {
  constructor(...args: TestAvatarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestAvatar> {
    return super.deploy(overrides || {}) as Promise<TestAvatar>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestAvatar {
    return super.attach(address) as TestAvatar;
  }
  override connect(signer: Signer): TestAvatar__factory {
    return super.connect(signer) as TestAvatar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestAvatarInterface {
    return new utils.Interface(_abi) as TestAvatarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestAvatar {
    return new Contract(address, _abi, signerOrProvider) as TestAvatar;
  }
}
