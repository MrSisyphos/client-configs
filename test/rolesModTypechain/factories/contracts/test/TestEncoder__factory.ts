/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestEncoder,
  TestEncoderInterface,
} from "../../../contracts/test/TestEncoder";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "dynamic",
            type: "bytes",
          },
        ],
        internalType: "struct TestEncoder._DynamicTuple",
        name: "",
        type: "tuple",
      },
    ],
    name: "_dynamicTuple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "dynamic",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "_static",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "dynamic32",
            type: "uint256[]",
          },
        ],
        internalType: "struct TestEncoder.DynamicTuple[]",
        name: "",
        type: "tuple[]",
      },
    ],
    name: "arrayDynamicTupleItems",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "a",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "b",
            type: "address",
          },
        ],
        internalType: "struct TestEncoder.StaticTuple[]",
        name: "",
        type: "tuple[]",
      },
    ],
    name: "arrayStaticTupleItems",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "dynamic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes2[]",
        name: "",
        type: "bytes2[]",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "dynamic32DynamicStatic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    name: "dynamicArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes2[]",
        name: "",
        type: "bytes2[]",
      },
    ],
    name: "dynamicStaticDynamic32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "dynamic",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "_static",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "dynamic32",
            type: "uint256[]",
          },
        ],
        internalType: "struct TestEncoder.DynamicTuple",
        name: "",
        type: "tuple",
      },
    ],
    name: "dynamicTuple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "a",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "b",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "a",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "b",
                type: "address",
              },
            ],
            internalType: "struct TestEncoder.StaticTuple[]",
            name: "c",
            type: "tuple[]",
          },
        ],
        internalType: "struct TestEncoder.DynamicTupleWithArray",
        name: "",
        type: "tuple",
      },
    ],
    name: "dynamicTupleWithNestedArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "a",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "a",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "b",
                type: "address",
              },
            ],
            internalType: "struct TestEncoder.StaticTuple",
            name: "b",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "c",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "dynamic",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "_static",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "dynamic32",
                type: "uint256[]",
              },
            ],
            internalType: "struct TestEncoder.DynamicTuple",
            name: "d",
            type: "tuple",
          },
        ],
        internalType: "struct TestEncoder.DynamicTupleWithDynamicTuple",
        name: "",
        type: "tuple",
      },
    ],
    name: "dynamicTupleWithNestedDynamicTuple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "a",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "b",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "a",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "b",
                type: "address",
              },
            ],
            internalType: "struct TestEncoder.StaticTuple",
            name: "c",
            type: "tuple",
          },
        ],
        internalType: "struct TestEncoder.DynamicTupleWithStaticTuple",
        name: "",
        type: "tuple",
      },
    ],
    name: "dynamicTupleWithNestedStaticTuple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "a",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "b",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "c",
            type: "bytes",
          },
          {
            internalType: "uint256[]",
            name: "d",
            type: "uint256[]",
          },
        ],
        internalType: "struct TestEncoder.MultiDynamicTuple",
        name: "",
        type: "tuple",
      },
    ],
    name: "multiDynamicTuple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "simple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "staticDynamic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    name: "staticDynamicDynamic32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "staticFn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "a",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "b",
            type: "address",
          },
        ],
        internalType: "struct TestEncoder.StaticTuple",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "staticTuple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d62806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a98ef1cf11610092578063a98ef1cf14610168578063baf2eefa1461017c578063c4192e4a1461018a578063cc93bff914610198578063d3227572146101a6578063d543852a146101b4578063ea06cf67146101c2578063ee6fafe0146101d0578063fde07f12146101de57600080fd5b80627587e0146100ef5780630be3bdec146101025780631adae90b1461011057806328ee40781461012257806342ce4e2a14610130578063488dab591461013e57806364664d131461014c57806383fb79681461015a575b600080fd5b6101006100fd366004610379565b50565b005b6101006100fd3660046104af565b61010061011e36600461055d565b5050565b6101006100fd366004610588565b6101006100fd36600461060a565b6101006100fd3660046106ba565b6101006100fd366004610742565b6101006100fd3660046107d7565b610100610176366004610867565b50505050565b61010061017636600461093b565b6101006101763660046109e2565b61010061011e366004610abf565b6101006100fd366004610b05565b6101006100fd366004610b1e565b6101006100fd366004610b52565b6101006100fd366004610bef565b6101006100fd366004610c92565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715610224576102246101ec565b60405290565b604051606081016001600160401b0381118282101715610224576102246101ec565b604051601f8201601f191681016001600160401b0381118282101715610274576102746101ec565b604052919050565b600082601f83011261028d57600080fd5b81356001600160401b038111156102a6576102a66101ec565b6102b9601f8201601f191660200161024c565b8181528460208386010111156102ce57600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b03821115610304576103046101ec565b5060051b60200190565b600082601f83011261031f57600080fd5b8135602061033461032f836102eb565b61024c565b82815260059290921b8401810191818101908684111561035357600080fd5b8286015b8481101561036e5780358352918301918301610357565b509695505050505050565b60006020828403121561038b57600080fd5b81356001600160401b03808211156103a257600080fd5b90830190608082860312156103b657600080fd5b6103be610202565b8235828111156103cd57600080fd5b6103d98782860161027c565b825250602083013560208201526040830135828111156103f857600080fd5b6104048782860161027c565b60408301525060608301358281111561041c57600080fd5b6104288782860161030e565b60608301525095945050505050565b60006060828403121561044957600080fd5b61045161022a565b905081356001600160401b038082111561046a57600080fd5b6104768583860161027c565b835260208401356020840152604084013591508082111561049657600080fd5b506104a38482850161030e565b60408301525092915050565b6000602082840312156104c157600080fd5b81356001600160401b038111156104d757600080fd5b6104e384828501610437565b949350505050565b80356001600160a01b038116811461050257600080fd5b919050565b60006040828403121561051957600080fd5b604051604081018181106001600160401b038211171561053b5761053b6101ec565b60405282358152905080610551602084016104eb565b60208201525092915050565b6000806060838503121561057057600080fd5b61057a8484610507565b946040939093013593505050565b60006020828403121561059a57600080fd5b81356001600160401b03808211156105b157600080fd5b90830190602082860312156105c557600080fd5b6040516020810181811083821117156105e0576105e06101ec565b6040528235828111156105f257600080fd5b6105fe8782860161027c565b82525095945050505050565b6000602080838503121561061d57600080fd5b82356001600160401b038082111561063457600080fd5b818501915085601f83011261064857600080fd5b813561065661032f826102eb565b81815260059190911b8301840190848101908883111561067557600080fd5b8585015b838110156106ad578035858111156106915760008081fd5b61069f8b89838a010161027c565b845250918601918601610679565b5098975050505050505050565b6000602082840312156106cc57600080fd5b81356001600160401b03808211156106e357600080fd5b90830190608082860312156106f757600080fd5b6106ff61022a565b8235815260208301358281111561071557600080fd5b6107218782860161027c565b6020830152506107348660408501610507565b604082015295945050505050565b60006020828403121561075457600080fd5b81356001600160e01b03198116811461076c57600080fd5b9392505050565b600082601f83011261078457600080fd5b8135602061079461032f836102eb565b82815260069290921b840181019181810190868411156107b357600080fd5b8286015b8481101561036e576107c98882610507565b8352918301916040016107b7565b6000602082840312156107e957600080fd5b81356001600160401b038111156107ff57600080fd5b6104e384828501610773565b60008083601f84011261081d57600080fd5b5081356001600160401b0381111561083457600080fd5b60208301915083602082850101111561084c57600080fd5b9250929050565b803563ffffffff8116811461050257600080fd5b6000806000806060858703121561087d57600080fd5b610886856104eb565b93506020808601356001600160401b03808211156108a357600080fd5b6108af89838a0161080b565b909650945060408801359150808211156108c857600080fd5b508601601f810188136108da57600080fd5b80356108e861032f826102eb565b81815260059190911b8201830190838101908a83111561090757600080fd5b928401925b8284101561092c5761091d84610853565b8252928401929084019061090c565b979a9699509497505050505050565b6000806000806060858703121561095157600080fd5b84356001600160401b038082111561096857600080fd5b818701915087601f83011261097c57600080fd5b81358181111561098b57600080fd5b8860208260051b85010111156109a057600080fd5b6020928301965094509086013590808211156109bb57600080fd5b506109c88782880161027c565b9250506109d760408601610853565b905092959194509250565b600080600080606085870312156109f857600080fd5b84356001600160401b0380821115610a0f57600080fd5b610a1b8883890161080b565b909650945060209150868201358015158114610a3657600080fd5b9350604087013581811115610a4a57600080fd5b87019050601f81018813610a5d57600080fd5b8035610a6b61032f826102eb565b81815260059190911b8201830190838101908a831115610a8a57600080fd5b928401925b8284101561092c5783356001600160f01b031981168114610ab05760008081fd5b82529284019290840190610a8f565b60008060408385031215610ad257600080fd5b8235915060208301356001600160401b03811115610aef57600080fd5b610afb8582860161027c565b9150509250929050565b600060208284031215610b1757600080fd5b5035919050565b600060208284031215610b3057600080fd5b81356001600160401b03811115610b4657600080fd5b6104e38482850161027c565b600060208284031215610b6457600080fd5b81356001600160401b0380821115610b7b57600080fd5b9083019060a08286031215610b8f57600080fd5b610b97610202565b823582811115610ba657600080fd5b610bb28782860161027c565b825250610bc28660208501610507565b602082015260608301356040820152608083013582811115610be357600080fd5b61042887828601610437565b60006020808385031215610c0257600080fd5b82356001600160401b0380821115610c1957600080fd5b818501915085601f830112610c2d57600080fd5b8135610c3b61032f826102eb565b81815260059190911b83018401908481019088831115610c5a57600080fd5b8585015b838110156106ad57803585811115610c765760008081fd5b610c848b89838a0101610437565b845250918601918601610c5e565b600060208284031215610ca457600080fd5b81356001600160401b0380821115610cbb57600080fd5b9083019060608286031215610ccf57600080fd5b610cd761022a565b82358152602083013582811115610ced57600080fd5b610cf98782860161027c565b602083015250604083013582811115610d1157600080fd5b610d1d87828601610773565b6040830152509594505050505056fea2646970667358221220eb7d06fd1fe51e6576cab237b6accdcb218342b968021ca91e3a9b2ee527f45364736f6c63430008110033";

type TestEncoderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestEncoderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestEncoder__factory extends ContractFactory {
  constructor(...args: TestEncoderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestEncoder> {
    return super.deploy(overrides || {}) as Promise<TestEncoder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestEncoder {
    return super.attach(address) as TestEncoder;
  }
  override connect(signer: Signer): TestEncoder__factory {
    return super.connect(signer) as TestEncoder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestEncoderInterface {
    return new utils.Interface(_abi) as TestEncoderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestEncoder {
    return new Contract(address, _abi, signerOrProvider) as TestEncoder;
  }
}
