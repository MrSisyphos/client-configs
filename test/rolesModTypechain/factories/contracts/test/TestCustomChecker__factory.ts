/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestCustomChecker,
  TestCustomCheckerInterface,
} from "../../../contracts/test/TestCustomChecker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "location",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        internalType: "bytes12",
        name: "extra",
        type: "bytes12",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "reason",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506102268061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806357cf558b1461002d575b5f80fd5b61004061003b3660046100d2565b61005b565b60408051921515835260208301919091520160405180910390f35b5f808087868861006b8883610187565b92610078939291906101ac565b610081916101d3565b905060648111156100995750600191505f90506100aa565b505f9150506001600160a01b031982165b97509795505050505050565b80356001600160a01b0319811681146100cd575f80fd5b919050565b5f805f805f805f60c0888a0312156100e8575f80fd5b87356001600160a01b03811681146100fe575f80fd5b965060208801359550604088013567ffffffffffffffff80821115610121575f80fd5b818a0191508a601f830112610134575f80fd5b813581811115610142575f80fd5b8b6020828501011115610153575f80fd5b602083019750809650505050606088013592506080880135915061017960a089016100b6565b905092959891949750929550565b808201808211156101a657634e487b7160e01b5f52601160045260245ffd5b92915050565b5f80858511156101ba575f80fd5b838611156101c6575f80fd5b5050820193919092039150565b803560208310156101a6575f19602084900360031b1b169291505056fea2646970667358221220d04a1cc76d018a8ab6e5c79b1ca5cd3957f2e98c8fee833e8b4de356c558389d64736f6c63430008150033";

type TestCustomCheckerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestCustomCheckerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestCustomChecker__factory extends ContractFactory {
  constructor(...args: TestCustomCheckerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestCustomChecker> {
    return super.deploy(overrides || {}) as Promise<TestCustomChecker>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestCustomChecker {
    return super.attach(address) as TestCustomChecker;
  }
  override connect(signer: Signer): TestCustomChecker__factory {
    return super.connect(signer) as TestCustomChecker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestCustomCheckerInterface {
    return new utils.Interface(_abi) as TestCustomCheckerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestCustomChecker {
    return new Contract(address, _abi, signerOrProvider) as TestCustomChecker;
  }
}
