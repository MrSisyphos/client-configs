/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockDecoder,
  MockDecoderInterface,
} from "../../../contracts/test/MockDecoder";

const _abi = [
  {
    inputs: [],
    name: "CalldataOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "enum ParameterType",
            name: "paramType",
            type: "uint8",
          },
          {
            internalType: "enum Operator",
            name: "operator",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "enum ParameterType",
                name: "paramType",
                type: "uint8",
              },
              {
                internalType: "enum Operator",
                name: "operator",
                type: "uint8",
              },
              {
                components: [
                  {
                    internalType: "enum ParameterType",
                    name: "paramType",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Operator",
                    name: "operator",
                    type: "uint8",
                  },
                  {
                    components: [
                      {
                        internalType: "enum ParameterType",
                        name: "paramType",
                        type: "uint8",
                      },
                      {
                        internalType: "enum Operator",
                        name: "operator",
                        type: "uint8",
                      },
                      {
                        components: [
                          {
                            internalType: "enum ParameterType",
                            name: "paramType",
                            type: "uint8",
                          },
                          {
                            internalType: "enum Operator",
                            name: "operator",
                            type: "uint8",
                          },
                          {
                            components: [
                              {
                                internalType: "enum ParameterType",
                                name: "paramType",
                                type: "uint8",
                              },
                              {
                                internalType: "enum Operator",
                                name: "operator",
                                type: "uint8",
                              },
                              {
                                components: [
                                  {
                                    internalType: "enum ParameterType",
                                    name: "paramType",
                                    type: "uint8",
                                  },
                                  {
                                    internalType: "enum Operator",
                                    name: "operator",
                                    type: "uint8",
                                  },
                                  {
                                    components: [
                                      {
                                        internalType: "enum ParameterType",
                                        name: "paramType",
                                        type: "uint8",
                                      },
                                      {
                                        internalType: "enum Operator",
                                        name: "operator",
                                        type: "uint8",
                                      },
                                      {
                                        components: [
                                          {
                                            internalType: "enum ParameterType",
                                            name: "paramType",
                                            type: "uint8",
                                          },
                                          {
                                            internalType: "enum Operator",
                                            name: "operator",
                                            type: "uint8",
                                          },
                                          {
                                            components: [
                                              {
                                                internalType:
                                                  "enum ParameterType",
                                                name: "paramType",
                                                type: "uint8",
                                              },
                                              {
                                                internalType: "enum Operator",
                                                name: "operator",
                                                type: "uint8",
                                              },
                                            ],
                                            internalType:
                                              "struct MockDecoder.IN10[]",
                                            name: "children",
                                            type: "tuple[]",
                                          },
                                        ],
                                        internalType:
                                          "struct MockDecoder.IN9[]",
                                        name: "children",
                                        type: "tuple[]",
                                      },
                                    ],
                                    internalType: "struct MockDecoder.IN8[]",
                                    name: "children",
                                    type: "tuple[]",
                                  },
                                ],
                                internalType: "struct MockDecoder.IN7[]",
                                name: "children",
                                type: "tuple[]",
                              },
                            ],
                            internalType: "struct MockDecoder.IN6[]",
                            name: "children",
                            type: "tuple[]",
                          },
                        ],
                        internalType: "struct MockDecoder.IN5[]",
                        name: "children",
                        type: "tuple[]",
                      },
                    ],
                    internalType: "struct MockDecoder.IN4[]",
                    name: "children",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct MockDecoder.IN3[]",
                name: "children",
                type: "tuple[]",
              },
            ],
            internalType: "struct MockDecoder.IN2[]",
            name: "children",
            type: "tuple[]",
          },
        ],
        internalType: "struct MockDecoder.IN1",
        name: "layout",
        type: "tuple",
      },
    ],
    name: "inspect",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "location",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "location",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "size",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "location",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "size",
                    type: "uint256",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "location",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "size",
                        type: "uint256",
                      },
                      {
                        components: [
                          {
                            internalType: "uint256",
                            name: "location",
                            type: "uint256",
                          },
                          {
                            internalType: "uint256",
                            name: "size",
                            type: "uint256",
                          },
                          {
                            components: [
                              {
                                internalType: "uint256",
                                name: "location",
                                type: "uint256",
                              },
                              {
                                internalType: "uint256",
                                name: "size",
                                type: "uint256",
                              },
                            ],
                            internalType: "struct MockDecoder.PP6[]",
                            name: "children",
                            type: "tuple[]",
                          },
                        ],
                        internalType: "struct MockDecoder.PP5[]",
                        name: "children",
                        type: "tuple[]",
                      },
                    ],
                    internalType: "struct MockDecoder.PP4[]",
                    name: "children",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct MockDecoder.PP3[]",
                name: "children",
                type: "tuple[]",
              },
            ],
            internalType: "struct MockDecoder.PP2[]",
            name: "children",
            type: "tuple[]",
          },
        ],
        internalType: "struct MockDecoder.PP1",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "pluck",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type MockDecoderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockDecoderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockDecoder__factory extends ContractFactory {
  constructor(...args: MockDecoderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockDecoder> {
    return super.deploy(overrides || {}) as Promise<MockDecoder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockDecoder {
    return super.attach(address) as MockDecoder;
  }
  override connect(signer: Signer): MockDecoder__factory {
    return super.connect(signer) as MockDecoder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockDecoderInterface {
    return new utils.Interface(_abi) as MockDecoderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockDecoder {
    return new Contract(address, _abi, signerOrProvider) as MockDecoder;
  }
}
